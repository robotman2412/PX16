
Tha PX16 bodge:
	1x	PX16 (16-bit) CPU, 16Kw ROM-ish, 64 Kw RAM
	1x	Hardware timer with 1 limit
	10x	Buttons

Power modes:
	On:
		Powered on, CPU running continuously.
		Default state.
	Idle:
		Powered on, CPU resumes on interrupt.
		Entered by updating power mode register.
		All states are preserved on exit.
	Light sleep:
		Powered on, power CPU restored on button press.
		Entered by updating power mode register.
		CPU will reset on exit, but RAM will not.
	Deep sleep:
		Powered off, power restored on button press.
		Entered by updating power mode register.
		CPU and RAM will reset on exit.
	Off:
		Powered off, battery disconnected.
		Entered by turning off the power switch.

Examples:
	On:
		Calculations, games and fun things.
	Idle:
		Little or no usage of CPU time.
	Light sleep:
		Waiting for inputs, saving power when nothing is happening.
	Deep sleep:
		Not in immediate use, saving power.
	Off:
		Not in use for an extended period of time.

MMIO:
	0xffff:			MMIO Size			(0x0040)
	0xfffe:			Power/timer mode	(6-bit + 5-bit)
	0xfffd:			Button input		(10-bit)
	0xfffb:			Timer 0 high
	0xfffa:			Timer 0 low
	0xfff9:			Limit 0 high
	0xfff8:			Limit 0 low
	0xfff7:			UART mode?
	0xfff6:			UART write?
	0xfff5:			UART read?
	0xffc0-0xffdf:	Matrix display

Power mode register: .DLI ---- .TBS ----
	D: Deep sleep:   Turns off power to CPU and RAM when 1.
	L: Light sleep:  Turns off power to CPU when 1.
	I: Idle:         Pauses the CPU when 1.
	T: Timer state:  Timers may wake from sleep when 0.
	B: Button state: Buttons may wake from sleep when 0.
	S: Screen state: Enables the screen when 0.
	The high half (0xf000 mask) of this register does not store state (no underlying register).
	This is because otherwise there would be no way to exit sleep modes.

Button input:
	    .---.                      .-.    
	    | 1 |               .-.   ( 5 )   
	.---'   '---.          ( 4 )   '-'    
	| 0       3 |           '-'       .-. 
	'---.   .---'              .-.   ( 7 )
	    | 2 |                 ( 6 )   '-' 
	    '---'                  '-'        
	                                      
	          ______      ______          
	          \__8__\     \__9__\         
	
	The button inputs are mapped directly to the bus through a buffer.

Timer mode register: ---- .CRW ---- .INE
	C: Interrupts:   Acknowledge interrupt.
	R: Read value:   Read current value to intermediary registers.
	W: Write value:  Write intermediary registers current value.
	I: Interrupts:   Send an IRQ when the limit is reached.
	N: Interrupts:   Send an NMI when the limit is reached.
	E: Enable:       Enable the timer.
	The high half (0x0f00 mask) of this register does not store state (no underlying register).
	This is because otherwise these are triggers.

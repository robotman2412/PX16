
Opcodes:
O	Name		Description
00	ADD			Addition.
01	SUB			Subtraction.
02	ADDC		Addition with carry.
03	SUBC		Subtraction with borrow.
04	INC			Increment / Decrement (1).
05	SHIFT		Bitwise shift (2).
06	AND			Bitwise AND.
07	OR			Bitwise OR.
08	CMP			Comparison.
09	XOR			Bitwise XOR.
0A	CMPC		Comparison with carry.
..	...
19	SEI			Enable or disable interrupts (3).
1A	OPER		Apply operand mode to B in next instruction.
1B	JMP			Jump and branch.
1C	MOV			Data copy.
1D	LEA			Load effective address.
1E	PSH			Push or pop to stack (4).
1F	HLT			Halt until interrupt.

(1) C: C.S
	S: Increment -> decrement.
	C: With carry / borrow.
(2) C: CRI
	I: Shift / rotate left -> right.
	R: Shift -> rotate.
	C: With carry.
(3) C: ..E
	E: Disable -> enable.
(4) C: PP.
	P: Push -> pop.

ALU Modes / controls:
	Additive:
		0 SUB: Addition -> subtraction.
		1 INC: Increment / decrement.
		2 CC:  With carry / borrow.
	Comparison:
		2 CC:  With carry / borrow.
	Shift:
		0 SHR: Shift / rotate left -> right.
		1 ROT: Shift -> rotate.
		2 CC:  With carry.
	Bitwise AND/OR:
		0 OR:  AND -> OR.
	Bitwise XOR.

Branch conditions:
C Name	Description
0 BGT	Branches to A if A>B is true (signed or unsigned).
1 BLT	Branches to A if A<B is true (signed or unsigned).
2 BCS	Branches to A if the carry flag is set.
3 BEQ	Branches to A if A==B is true.
4 JMP	Jumps to A.
5 JSR	Jumps to subroutine A.
6 RET	Returns from subroutine.
7 RTI	Returns from interrupt.


A < B: cout,  ~zero
A > B: ~cout, ~zero
